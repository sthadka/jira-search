name: Release and Deploy

on:
  push:
    branches: [main, beta]
  pull_request:
    branches: [main]

env:
  REGISTRY: quay.io
  IMAGE_NAME: sthadka/jira-search

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
          
      - name: Setup test configuration
        run: |
          cp config.yaml.example config.yaml
          
      - name: Run tests
        run: |
          python -m pytest tests/ -v --cov=jira_search
        env:
          JIRA_URL: https://test-jira.example.com
          JIRA_USERNAME: test-user
          JIRA_PAT: test-token
          JIRA_PROJECT: TEST
          
      - name: Lint code
        run: |
          flake8 src/jira_search --max-line-length=100
          black --check src/jira_search

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/beta'
    outputs:
      version: ${{ steps.semantic.outputs.new_release_version }}
      released: ${{ steps.semantic.outputs.new_release_published }}
    container:
      image: node:18-alpine
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Install semantic-release dependencies
        run: |
          npm install -g semantic-release @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/github @semantic-release/exec
        
      - name: Run semantic-release
        id: semantic
        run: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.released == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=v${{ needs.release.outputs.version }}
            type=raw,value=${{ needs.release.outputs.version }}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ needs.release.outputs.version }}